{"ast":null,"code":"import { ADD_ONE, APPLY_NUMBER, CHANGE_OPERATION, CLEAR_DISPLAY, M_PLUS, MR, MC } from './../actions';\nexport const initialState = {\n  total: 100,\n  operation: \"+\",\n  memory: 100\n};\nconst calculateResult = (num1, num2, operation) => {\n  switch (operation) {\n    case \"+\":\n      return num1 + num2;\n    case \"*\":\n      return num1 * num2;\n    case \"-\":\n      return num1 - num2;\n    default:\n      return;\n  }\n};\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case ADD_ONE:\n      return {\n        ...state,\n        total: state.total + 1\n      };\n    case APPLY_NUMBER:\n      return {\n        ...state,\n        total: calculateResult(state.total, action.payload, state.operation)\n      };\n    case CHANGE_OPERATION:\n      return {\n        ...state,\n        operation: action.payload\n      };\n    case CLEAR_DISPLAY:\n      return {\n        ...state,\n        total: 0\n      };\n    case M_PLUS:\n      return {\n        ...state,\n        memory: state.total + state.memory\n      };\n    case MR:\n      return {\n        ...state,\n        total: state.memory\n      };\n    case MC:\n      return {\n        ...state,\n        memory: 0\n      };\n    default:\n      return state;\n  }\n};\nexport default reducer;","map":{"version":3,"names":["ADD_ONE","APPLY_NUMBER","CHANGE_OPERATION","CLEAR_DISPLAY","M_PLUS","MR","MC","initialState","total","operation","memory","calculateResult","num1","num2","reducer","state","action","type","payload"],"sources":["C:/Users/EMRE CAN/fsweb-s10g1-reducer-calculator/src/reducers/index.js"],"sourcesContent":["import { ADD_ONE, APPLY_NUMBER, CHANGE_OPERATION,CLEAR_DISPLAY,M_PLUS,MR,MC } from './../actions';\r\n\r\nexport const initialState = {\r\n  total: 100,\r\n  operation: \"+\",\r\n  memory: 100\r\n}\r\n\r\nconst calculateResult = (num1, num2, operation) => {\r\n  switch (operation) {\r\n    case (\"+\"):\r\n      return num1 + num2;\r\n    case (\"*\"):\r\n      return num1 * num2;\r\n    case (\"-\"):\r\n      return num1 - num2;\r\n    default:\r\n      return;\r\n  }\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case (ADD_ONE):\r\n      return ({\r\n        ...state,\r\n        total: state.total + 1\r\n      });\r\n\r\n    case (APPLY_NUMBER):\r\n      return ({\r\n        ...state,\r\n        total: calculateResult(state.total, action.payload, state.operation)\r\n      });\r\n\r\n    case (CHANGE_OPERATION):\r\n      return ({\r\n        ...state,\r\n        operation: action.payload\r\n      });\r\n\r\n      case(CLEAR_DISPLAY):\r\n      return ({\r\n        ...state,\r\n        total:0,\r\n      });\r\n\r\n      case(M_PLUS):\r\n      return ({...state,\r\n        memory:state.total+state.memory });\r\n\r\n        case(MR):\r\n        return({...state,total:state.memory});\r\n\r\n        case(MC):\r\n        return({...state,memory:0});\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default reducer;"],"mappings":"AAAA,SAASA,OAAO,EAAEC,YAAY,EAAEC,gBAAgB,EAACC,aAAa,EAACC,MAAM,EAACC,EAAE,EAACC,EAAE,QAAQ,cAAc;AAEjG,OAAO,MAAMC,YAAY,GAAG;EAC1BC,KAAK,EAAE,GAAG;EACVC,SAAS,EAAE,GAAG;EACdC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,eAAe,GAAGA,CAACC,IAAI,EAAEC,IAAI,EAAEJ,SAAS,KAAK;EACjD,QAAQA,SAAS;IACf,KAAM,GAAG;MACP,OAAOG,IAAI,GAAGC,IAAI;IACpB,KAAM,GAAG;MACP,OAAOD,IAAI,GAAGC,IAAI;IACpB,KAAM,GAAG;MACP,OAAOD,IAAI,GAAGC,IAAI;IACpB;MACE;EACJ;AACF,CAAC;AAED,MAAMC,OAAO,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACjC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAMjB,OAAO;MACX,OAAQ;QACN,GAAGe,KAAK;QACRP,KAAK,EAAEO,KAAK,CAACP,KAAK,GAAG;MACvB,CAAC;IAEH,KAAMP,YAAY;MAChB,OAAQ;QACN,GAAGc,KAAK;QACRP,KAAK,EAAEG,eAAe,CAACI,KAAK,CAACP,KAAK,EAAEQ,MAAM,CAACE,OAAO,EAAEH,KAAK,CAACN,SAAS;MACrE,CAAC;IAEH,KAAMP,gBAAgB;MACpB,OAAQ;QACN,GAAGa,KAAK;QACRN,SAAS,EAAEO,MAAM,CAACE;MACpB,CAAC;IAED,KAAKf,aAAa;MAClB,OAAQ;QACN,GAAGY,KAAK;QACRP,KAAK,EAAC;MACR,CAAC;IAED,KAAKJ,MAAM;MACX,OAAQ;QAAC,GAAGW,KAAK;QACfL,MAAM,EAACK,KAAK,CAACP,KAAK,GAACO,KAAK,CAACL;MAAO,CAAC;IAEjC,KAAKL,EAAE;MACP,OAAO;QAAC,GAAGU,KAAK;QAACP,KAAK,EAACO,KAAK,CAACL;MAAM,CAAC;IAEpC,KAAKJ,EAAE;MACP,OAAO;QAAC,GAAGS,KAAK;QAACL,MAAM,EAAC;MAAC,CAAC;IAE9B;MACE,OAAOK,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}